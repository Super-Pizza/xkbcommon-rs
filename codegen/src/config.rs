// Based on meson.build and meson_options

use std::path::Path;
use std::fs::File;
use std::io::{BufWriter, Write};


fn xkb_config_root() -> &'static str {

    // TODO: `xkeyboard-config install path`
    // This is taken from README.md
    // Set according to 
    "/usr/share/X11/xkb"

}
fn xkb_config_extra_path() -> &'static str {

    // TODO: `/etc` is assumed to be 
    // the value of `$sysconfdir` in meson.
    "/etc/xkb"

}

fn xkb_default_rules() -> &'static str {

    // From `meson_options.txt`
    "evdev"

}
fn xkb_default_model() -> &'static str {

    // From `meson_options.txt`
    "pc105"

}
fn xkb_default_layout() -> &'static str {

    // From `meson_options.txt`
    "us"

}
fn xkb_default_variant() -> &'static str {

    // From `meson_options.txt`
    ""

}
fn xkb_default_options() -> &'static str {

    // From `meson_options.txt`
    ""

}

pub fn make_config(
    out_path: &Path
    ) {


    let mut out_file = BufWriter::new(File::create(out_path).unwrap());

    let vars = vec![
        ("DFLT_XKB_CONFIG_ROOT", xkb_config_root()),
        ("DFLT_XKB_CONFIG_EXTRA_PATH", xkb_config_extra_path()),
        // TODO: XLOCALEDIR
        ("DEFAULT_XKB_RULES", xkb_default_rules()),
        ("DEFAULT_XKB_MODEL", xkb_default_model()),
        ("DEFAULT_XKB_LAYOUT", xkb_default_layout()),
        ("DEFAULT_XKB_VARIANT", xkb_default_variant()),
        ("DEFAULT_XKB_OPTIONS", xkb_default_options()),
        // TODO: others

    ];
    

    writeln!(
        &mut out_file,
        "// This file was autogenerated by `build_tools/src/config.rs").unwrap();

    for (varname, value) in vars {

        writeln!(
            &mut out_file,
            "pub(crate) const {}: &'static str = \"{}\";",
            varname,
            value
        ).unwrap();
    }


}
